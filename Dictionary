В какой-то момент в Институте биоинформатики биологи перестали понимать, что говорят информатики: они говорили каким-то странным набором звуков.

В какой-то момент один из биологов раскрыл секрет информатиков: они использовали при общении подстановочный шифр, т.е. заменяли каждый символ исходного сообщения на соответствующий ему другой символ. Биологи раздобыли ключ к шифру и теперь нуждаются в помощи:

Напишите программу, которая умеет шифровать и расшифровывать шифр подстановки. Программа принимает на вход две строки одинаковой длины, на первой строке записаны символы исходного алфавита, на второй строке — символы конечного алфавита, после чего идёт строка, которую нужно зашифровать переданным ключом, и ещё одна строка, которую нужно расшифровать.

Пусть, например, на вход программе передано:
abcd
*d%#
abacabadaba
#*%*d*%

Это значит, что символ a исходного сообщения заменяется на символ * в шифре, b заменяется на d, c — на % и d — на #.
Нужно зашифровать строку abacabadaba и расшифровать строку #*%*d*% с помощью этого шифра. Получаем следующие строки, которые и передаём на вывод программы:
*d*%*d*#*d*
dacabac

# put your python code here


s=str(input())
a=[]
for i in range(len(s)):
    si=s[i]
    a.append(si)
#print (a)
s1=str(input())
b=[]
for i in range(len(s1)):
    si=s1[i]
    b.append(si)
d = {key:value for key,value in zip(a,b)}
s2=str(input())
c=[]
for i in range(len(s2)):
    si=s2[i]
    c.append(si)
#print(c)
for i in range(len(c)):
  k=d[c[i]]
  c[i]=k
#print(c)
s3=str(input())
u=[]
for i in range(len(s3)):
    si=s3[i]
    u.append(si)
for i in range(len(u)):
  for j in range (len(b)):
    if u[i]==d[a[j]]:
      k=a[j]
      u[i]=k
      break
#print(u)
for i in range(len(c)):
  print(c[i],end='')
print()
#print(u[0])
for j in range(len(u)):
  print(u[j],end='')  
